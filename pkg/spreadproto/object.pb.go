// Code generated by protoc-gen-go.
// source: object.proto
// DO NOT EDIT!

/*
Package spreadproto is a generated protocol buffer package.

It is generated from these files:
	object.proto

It has these top-level messages:
	Field
	Object
	Array
	SRI
	Link
	Document
	DocumentInfo
	Parameter
	Argument
*/
package spreadproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Field represents a field of an object.
type Field struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*Field_Number
	//	*Field_Str
	//	*Field_Boolean
	//	*Field_Object
	//	*Field_Array
	//	*Field_Link
	Value isField_Value `protobuf_oneof:"value"`
	Param *Parameter    `protobuf:"bytes,8,opt,name=param" json:"param,omitempty"`
}

func (m *Field) Reset()                    { *m = Field{} }
func (m *Field) String() string            { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()               {}
func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isField_Value interface {
	isField_Value()
}

type Field_Number struct {
	Number float64 `protobuf:"fixed64,2,opt,name=number,oneof"`
}
type Field_Str struct {
	Str string `protobuf:"bytes,3,opt,name=str,oneof"`
}
type Field_Boolean struct {
	Boolean bool `protobuf:"varint,4,opt,name=boolean,oneof"`
}
type Field_Object struct {
	Object *Object `protobuf:"bytes,5,opt,name=object,oneof"`
}
type Field_Array struct {
	Array *Array `protobuf:"bytes,6,opt,name=array,oneof"`
}
type Field_Link struct {
	Link *Link `protobuf:"bytes,7,opt,name=link,oneof"`
}

func (*Field_Number) isField_Value()  {}
func (*Field_Str) isField_Value()     {}
func (*Field_Boolean) isField_Value() {}
func (*Field_Object) isField_Value()  {}
func (*Field_Array) isField_Value()   {}
func (*Field_Link) isField_Value()    {}

func (m *Field) GetValue() isField_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Field) GetNumber() float64 {
	if x, ok := m.GetValue().(*Field_Number); ok {
		return x.Number
	}
	return 0
}

func (m *Field) GetStr() string {
	if x, ok := m.GetValue().(*Field_Str); ok {
		return x.Str
	}
	return ""
}

func (m *Field) GetBoolean() bool {
	if x, ok := m.GetValue().(*Field_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (m *Field) GetObject() *Object {
	if x, ok := m.GetValue().(*Field_Object); ok {
		return x.Object
	}
	return nil
}

func (m *Field) GetArray() *Array {
	if x, ok := m.GetValue().(*Field_Array); ok {
		return x.Array
	}
	return nil
}

func (m *Field) GetLink() *Link {
	if x, ok := m.GetValue().(*Field_Link); ok {
		return x.Link
	}
	return nil
}

func (m *Field) GetParam() *Parameter {
	if m != nil {
		return m.Param
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Field) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Field_OneofMarshaler, _Field_OneofUnmarshaler, _Field_OneofSizer, []interface{}{
		(*Field_Number)(nil),
		(*Field_Str)(nil),
		(*Field_Boolean)(nil),
		(*Field_Object)(nil),
		(*Field_Array)(nil),
		(*Field_Link)(nil),
	}
}

func _Field_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Field)
	// value
	switch x := m.Value.(type) {
	case *Field_Number:
		b.EncodeVarint(2<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Number))
	case *Field_Str:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Str)
	case *Field_Boolean:
		t := uint64(0)
		if x.Boolean {
			t = 1
		}
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Field_Object:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Object); err != nil {
			return err
		}
	case *Field_Array:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Array); err != nil {
			return err
		}
	case *Field_Link:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Link); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Field.Value has unexpected type %T", x)
	}
	return nil
}

func _Field_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Field)
	switch tag {
	case 2: // value.number
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &Field_Number{math.Float64frombits(x)}
		return true, err
	case 3: // value.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Field_Str{x}
		return true, err
	case 4: // value.boolean
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Field_Boolean{x != 0}
		return true, err
	case 5: // value.object
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Object)
		err := b.DecodeMessage(msg)
		m.Value = &Field_Object{msg}
		return true, err
	case 6: // value.array
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Array)
		err := b.DecodeMessage(msg)
		m.Value = &Field_Array{msg}
		return true, err
	case 7: // value.link
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Link)
		err := b.DecodeMessage(msg)
		m.Value = &Field_Link{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Field_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Field)
	// value
	switch x := m.Value.(type) {
	case *Field_Number:
		n += proto.SizeVarint(2<<3 | proto.WireFixed64)
		n += 8
	case *Field_Str:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Str)))
		n += len(x.Str)
	case *Field_Boolean:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += 1
	case *Field_Object:
		s := proto.Size(x.Object)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Field_Array:
		s := proto.Size(x.Array)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Field_Link:
		s := proto.Size(x.Link)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Object represents a map with strings for keys.
type Object struct {
	Items map[string]*Field `protobuf:"bytes,1,rep,name=items" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Object) GetItems() map[string]*Field {
	if m != nil {
		return m.Items
	}
	return nil
}

// Array represents an array.
type Array struct {
	Items []*Field `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *Array) Reset()                    { *m = Array{} }
func (m *Array) String() string            { return proto.CompactTextString(m) }
func (*Array) ProtoMessage()               {}
func (*Array) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Array) GetItems() []*Field {
	if m != nil {
		return m.Items
	}
	return nil
}

// A SRI represents a parsed Spread Resource Identifier (SRI), a globally unique address for a document or field stored within a repository.
type SRI struct {
	Treeish string `protobuf:"bytes,1,opt,name=treeish" json:"treeish,omitempty"`
	Path    string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Field   string `protobuf:"bytes,3,opt,name=field" json:"field,omitempty"`
}

func (m *SRI) Reset()                    { *m = SRI{} }
func (m *SRI) String() string            { return proto.CompactTextString(m) }
func (*SRI) ProtoMessage()               {}
func (*SRI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// Link represents a relationship to another field.
type Link struct {
	PackageName string      `protobuf:"bytes,1,opt,name=packageName" json:"packageName,omitempty"`
	Target      *SRI        `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`
	Override    bool        `protobuf:"varint,3,opt,name=override" json:"override,omitempty"`
	Args        []*Argument `protobuf:"bytes,4,rep,name=args" json:"args,omitempty"`
}

func (m *Link) Reset()                    { *m = Link{} }
func (m *Link) String() string            { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()               {}
func (*Link) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Link) GetTarget() *SRI {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Link) GetArgs() []*Argument {
	if m != nil {
		return m.Args
	}
	return nil
}

// Document is the root of Spread data stored in a Git blob. It has field stored at it's root, typically with an object as it's value.
type Document struct {
	Name string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Info *DocumentInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Root *Field        `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Document) GetInfo() *DocumentInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Document) GetRoot() *Field {
	if m != nil {
		return m.Root
	}
	return nil
}

// DocumentInfo provides metadata about an document.
type DocumentInfo struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *DocumentInfo) Reset()                    { *m = DocumentInfo{} }
func (m *DocumentInfo) String() string            { return proto.CompactTextString(m) }
func (*DocumentInfo) ProtoMessage()               {}
func (*DocumentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// Parameter allows user input to be used in producing the output of the field.
type Parameter struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Prompt  string `protobuf:"bytes,2,opt,name=prompt" json:"prompt,omitempty"`
	Pattern string `protobuf:"bytes,3,opt,name=pattern" json:"pattern,omitempty"`
	// Default is the value a parameter will take if no argument is given for it. Parameters without defaults require args.
	Default *Argument `protobuf:"bytes,4,opt,name=default" json:"default,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Parameter) GetDefault() *Argument {
	if m != nil {
		return m.Default
	}
	return nil
}

// Argument contains an argument to fulfill a parameter.
type Argument struct {
	// Types that are valid to be assigned to Value:
	//	*Argument_Number
	//	*Argument_Str
	//	*Argument_Boolean
	Value isArgument_Value `protobuf_oneof:"value"`
}

func (m *Argument) Reset()                    { *m = Argument{} }
func (m *Argument) String() string            { return proto.CompactTextString(m) }
func (*Argument) ProtoMessage()               {}
func (*Argument) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type isArgument_Value interface {
	isArgument_Value()
}

type Argument_Number struct {
	Number float64 `protobuf:"fixed64,1,opt,name=number,oneof"`
}
type Argument_Str struct {
	Str string `protobuf:"bytes,2,opt,name=str,oneof"`
}
type Argument_Boolean struct {
	Boolean bool `protobuf:"varint,3,opt,name=boolean,oneof"`
}

func (*Argument_Number) isArgument_Value()  {}
func (*Argument_Str) isArgument_Value()     {}
func (*Argument_Boolean) isArgument_Value() {}

func (m *Argument) GetValue() isArgument_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Argument) GetNumber() float64 {
	if x, ok := m.GetValue().(*Argument_Number); ok {
		return x.Number
	}
	return 0
}

func (m *Argument) GetStr() string {
	if x, ok := m.GetValue().(*Argument_Str); ok {
		return x.Str
	}
	return ""
}

func (m *Argument) GetBoolean() bool {
	if x, ok := m.GetValue().(*Argument_Boolean); ok {
		return x.Boolean
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Argument) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Argument_OneofMarshaler, _Argument_OneofUnmarshaler, _Argument_OneofSizer, []interface{}{
		(*Argument_Number)(nil),
		(*Argument_Str)(nil),
		(*Argument_Boolean)(nil),
	}
}

func _Argument_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Argument)
	// value
	switch x := m.Value.(type) {
	case *Argument_Number:
		b.EncodeVarint(1<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Number))
	case *Argument_Str:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Str)
	case *Argument_Boolean:
		t := uint64(0)
		if x.Boolean {
			t = 1
		}
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Argument.Value has unexpected type %T", x)
	}
	return nil
}

func _Argument_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Argument)
	switch tag {
	case 1: // value.number
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &Argument_Number{math.Float64frombits(x)}
		return true, err
	case 2: // value.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Argument_Str{x}
		return true, err
	case 3: // value.boolean
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Argument_Boolean{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _Argument_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Argument)
	// value
	switch x := m.Value.(type) {
	case *Argument_Number:
		n += proto.SizeVarint(1<<3 | proto.WireFixed64)
		n += 8
	case *Argument_Str:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Str)))
		n += len(x.Str)
	case *Argument_Boolean:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Field)(nil), "spread.Field")
	proto.RegisterType((*Object)(nil), "spread.Object")
	proto.RegisterType((*Array)(nil), "spread.Array")
	proto.RegisterType((*SRI)(nil), "spread.SRI")
	proto.RegisterType((*Link)(nil), "spread.Link")
	proto.RegisterType((*Document)(nil), "spread.Document")
	proto.RegisterType((*DocumentInfo)(nil), "spread.DocumentInfo")
	proto.RegisterType((*Parameter)(nil), "spread.Parameter")
	proto.RegisterType((*Argument)(nil), "spread.Argument")
}

var fileDescriptor0 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xf1, 0x67, 0xc6, 0x49, 0x49, 0x0d, 0x07, 0x03, 0x11, 0x2a, 0x96, 0x90, 0x7a, 0xca,
	0x81, 0x5e, 0x10, 0x9c, 0xa8, 0xf8, 0x8a, 0x84, 0x00, 0xc1, 0x09, 0x24, 0x0e, 0x9b, 0x64, 0x92,
	0xba, 0xb1, 0xbd, 0xd6, 0x7a, 0x53, 0x29, 0xbf, 0x93, 0x3f, 0xc4, 0xec, 0xd8, 0xdb, 0xc4, 0xb4,
	0xa7, 0x78, 0xe7, 0xbd, 0x99, 0x37, 0xf3, 0x66, 0x02, 0x23, 0xb9, 0xb8, 0xc6, 0xa5, 0x9e, 0xd5,
	0x4a, 0x6a, 0x99, 0x04, 0x4d, 0xad, 0x50, 0xac, 0xb2, 0xbf, 0x0e, 0xf8, 0x1f, 0x73, 0x2c, 0x56,
	0x49, 0x0c, 0xee, 0x16, 0xf7, 0xa9, 0x73, 0xe6, 0x9c, 0x0f, 0x93, 0x09, 0x04, 0xd5, 0xae, 0x5c,
	0xa0, 0x4a, 0x07, 0xf4, 0x76, 0x3e, 0x3f, 0x48, 0xc6, 0xe0, 0x36, 0x5a, 0xa5, 0xae, 0x81, 0xe9,
	0x79, 0x0a, 0xe1, 0x42, 0xca, 0x02, 0x45, 0x95, 0x7a, 0x14, 0x8a, 0x28, 0x74, 0x06, 0x41, 0x2b,
	0x91, 0xfa, 0x14, 0x89, 0x5f, 0x9d, 0xcc, 0x5a, 0x8d, 0xd9, 0x37, 0x8e, 0x12, 0xe3, 0x39, 0xf8,
	0x42, 0x29, 0xb1, 0x4f, 0x03, 0x26, 0x8c, 0x2d, 0xe1, 0x9d, 0x09, 0x12, 0x3e, 0x05, 0xaf, 0xc8,
	0xab, 0x6d, 0x1a, 0x32, 0x3c, 0xb2, 0xf0, 0x17, 0x8a, 0x71, 0x7d, 0xbf, 0x16, 0x4a, 0x94, 0x69,
	0xc4, 0xf0, 0xa9, 0x85, 0xbf, 0x9b, 0x20, 0x6a, 0x54, 0x97, 0x21, 0xf8, 0x37, 0xa2, 0xd8, 0x61,
	0x26, 0x21, 0x68, 0x45, 0x93, 0x73, 0xf0, 0x73, 0x8d, 0x65, 0x43, 0x73, 0xb9, 0x94, 0xf4, 0xa4,
	0xdf, 0xd3, 0x6c, 0x6e, 0xb0, 0x0f, 0x95, 0x56, 0xfb, 0xa7, 0x6f, 0x01, 0x0e, 0xaf, 0xbe, 0x1b,
	0xd3, 0xae, 0x2e, 0x9b, 0x71, 0xd4, 0x37, 0x1b, 0xf7, 0x66, 0xf0, 0xda, 0xc9, 0x5e, 0x82, 0xcf,
	0x43, 0x18, 0xea, 0xb1, 0x5e, 0x9f, 0x9a, 0x5d, 0x80, 0xfb, 0xf3, 0xc7, 0x3c, 0x79, 0x08, 0xa1,
	0x56, 0x88, 0x79, 0x73, 0xd5, 0x09, 0x8c, 0xc0, 0xab, 0x85, 0xbe, 0xe2, 0xfa, 0x43, 0xb2, 0xda,
	0x5f, 0x1b, 0x7a, 0x6b, 0x76, 0x76, 0x0d, 0x9e, 0x71, 0x20, 0x79, 0x04, 0x71, 0x2d, 0x96, 0x5b,
	0xb1, 0xc1, 0xaf, 0x34, 0x6f, 0x97, 0xf9, 0x0c, 0x02, 0x2d, 0xd4, 0x06, 0x75, 0xd7, 0x5b, 0x6c,
	0x05, 0x8d, 0xce, 0x04, 0x22, 0x79, 0x83, 0x4a, 0xe5, 0x2b, 0xe4, 0x5a, 0x11, 0x6d, 0xc0, 0x23,
	0x76, 0x43, 0x3b, 0x33, 0xdd, 0x4d, 0x0e, 0x0b, 0xd8, 0xec, 0x4a, 0xac, 0x74, 0xf6, 0x0b, 0xa2,
	0xf7, 0x72, 0xc9, 0xdf, 0xa6, 0xa9, 0xea, 0x20, 0x94, 0x81, 0x97, 0x57, 0x6b, 0xd9, 0xc9, 0x3c,
	0xb6, 0x99, 0x96, 0x3d, 0x27, 0x8c, 0x9a, 0xf1, 0x94, 0x94, 0x9a, 0xb5, 0xee, 0xcc, 0x3e, 0x85,
	0x51, 0x8f, 0x6c, 0x67, 0xe6, 0xf2, 0xd9, 0x1f, 0x18, 0xde, 0xee, 0xf1, 0x3f, 0xe5, 0x13, 0x08,
	0xe8, 0x66, 0xcb, 0x5a, 0x77, 0xf6, 0x90, 0x7b, 0x94, 0x48, 0xbc, 0xaa, 0x35, 0x28, 0x79, 0x01,
	0xe1, 0x0a, 0xd7, 0x62, 0x57, 0x68, 0xbe, 0xc5, 0xfb, 0xe6, 0xfa, 0x04, 0x91, 0xfd, 0x3e, 0xba,
	0x6d, 0xa7, 0x7f, 0xdb, 0x83, 0xbb, 0xb7, 0xed, 0xb6, 0xb7, 0x7d, 0x7b, 0x59, 0x97, 0xe3, 0xdf,
	0x71, 0x5b, 0x9b, 0xff, 0x46, 0x8b, 0x80, 0x7f, 0x2e, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xc9,
	0x65, 0x45, 0xb7, 0x5d, 0x03, 0x00, 0x00,
}
